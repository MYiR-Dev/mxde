
setenv ipaddr 192.168.30.106
setenv serverip 192.168.30.100

ethprime=FEC0

setenv nfsroot /home/imx/nfs_rootfs
setenv gateway 192.168.30.1
setenv netmask 255.255.255.0

setenv ethaddr 01:02:03:04:05:06

setenv bootcmd_nfs 'setenv bootargs console=${console},${baudrate} ${smp} root=/dev/nfs ip=${ipaddr}:${serverip}:${gateway}:${netmask}::eth0:off nfsroot=${serverip}:${nfsroot}'

setenv bootcmd 'nand read ${loadaddr} 0x500000 0xA00000;nand read ${fdt_addr} 0xF00000 0x100000;run bootcmd_nfs;bootz ${loadaddr} - ${fdt_addr}'

setenv bootcmd 'nand read ${loadaddr} 0x500000 0xA00000;nand read ${fdt_addr} 0xF00000 0x100000;bootz ${loadaddr} - ${fdt_addr}'


DISTRO=s-labs-linux MACHINE=mys6ul14x14 source fsl-setup-release.sh -b build -e fb


 mount -t nfs -o nfsvers=3,vers=3 192.168.30.100:/home/imx/nfs_rootfs/ /mnt/
 mount -t nfs -o nolock 192.168.30.100:/home/imx/nfs_rootfs/ /mnt



setenv ipaddr 192.168.30.120

connmanctl> technologies
/net/connman/technology/ethernet
  Name = Wired
  Type = ethernet
  Powered = True
  Connected = False
  Tethering = False
connmanctl> state
  State = idle
  OfflineMode = False
  SessionMode = False
connmanctl> technology
Error 'technology': Unknown command
connmanctl> technology
Error 'technology': Unknown command
connmanctl> technologys
Error 'technologys': Unknown command
connmanctl> technologies
/net/connman/technology/ethernet
  Name = Wired
  Type = ethernet
  Powered = True
  Connected = False
  Tethering = False
connmanctl>


1.先连接
connect ethernet_5664dc040c2b_cable
2.设置激活状态：
config ethernet_5664dc040c2b_cable  --autoconnect  yes

config ethernet_9e7c0fb933c2_cable  --ipv4  manual 192.168.1.107 255.255.255.0 192.168.1.1


dbus.Dictionary({

dbus.String(u'IPv6.Configuration'): dbus.Dictionary({dbus.String(u'Method'): dbus.String(u'auto',            variant_level=1), 		             dbus.String(u'Privacy'): dbus.String(u'disabled', variant_level=1)},

signature=dbus.Signature('sv'), variant_level=1),

dbus.String(u'AutoConnect'): dbus.Boolean(False, variant_level=1),
dbus.String(u'Name'): dbus.String(u'Wired', variant_level=1),
dbus.String(u'Nameservers'): dbus.Array([dbus.String(u'223.5.5.5'), dbus.String(u'201.104.111.114'), dbus.String(u'114.114.114.114')], signature=dbus.Signature('s'), variant_level=1),

dbus.String(u'Provider'): dbus.Dictionary({}, signature=dbus.Signature('sv'), variant_level=1),
dbus.String(u'Favorite'): dbus.Boolean(True, variant_level=1),
dbus.String(u'Domains.Configuration'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1), dbus.String(u'Timeservers.Configuration'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1),
dbus.String(u'State'): dbus.String(u'online', variant_level=1),
dbus.String(u'Proxy'): dbus.Dictionary({dbus.String(u'Method'): dbus.String(u'direct', variant_level=1)}, signature=dbus.Signature('sv'), variant_level=1), dbus.String(u'Nameservers.Configuration'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1),

dbus.String(u'IPv4'):
  dbus.Dictionary({dbus.String(u'Netmask'): dbus.String(u'255.255.255.0', variant_level=1),
  dbus.String(u'Gateway'): dbus.String(u'192.168.30.1', variant_level=1),
  dbus.String(u'Method'): dbus.String(u'dhcp', variant_level=1),
  dbus.String(u'Address'): dbus.String(u'192.168.30.190', variant_level=1)}, signature=dbus.Signature('sv'), variant_level=1),

  dbus.String(u'Timeservers'): dbus.Array([dbus.String(u'192.168.30.1'), dbus.String(u'server1'), dbus.String(u'server2'), dbus.String(u'...')], signature=dbus.Signature('s'), variant_level=1),

  dbus.String(u'IPv6'): dbus.Dictionary({}, signature=dbus.Signature('sv'), variant_level=1),
  dbus.String(u'Domains'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1),
  dbus.String(u'Ethernet'): dbus.Dictionary({dbus.String(u'Interface'): dbus.String(u'eth0', variant_level=1),
  dbus.String(u'MTU'): dbus.UInt16(1500, variant_level=1),
  dbus.String(u'Method'): dbus.String(u'auto', variant_level=1),
  dbus.String(u'Address'): dbus.String(u'0E:4A:A1:87:47:C9', variant_level=1)}, signature=dbus.Signature('sv'), variant_level=1), dbus.String(u'Security'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1), dbus.String(u'Proxy.Configuration'): dbus.Dictionary({}, signature=dbus.Signature('sv'), variant_level=1), dbus.String(u'Type'): dbus.String(u'ethernet', variant_level=1),
  dbus.String(u'Immutable'): dbus.Boolean(False, variant_level=1),
  dbus.String(u'IPv4.Configuration'): dbus.Dictionary({dbus.String(u'Method'): dbus.String(u'dhcp', variant_level=1)}, signature=dbus.Signature('sv'), variant_level=1)},


 signature=dbus.Signature('sv'))

service-get /net/connman/service/ethernet_5664dc040c2b_cable IPv4
service-get /net/connman/service/ethernet_5664dc040c2b_cable IPv4

service-get /net/connman/service/ethernet_5664dc040c2b_cable IPv4.Configuration
service-get /net/connman/service/ethernet_5664dc040c2b_cable IPv4.Address

service-connect /net/connman/service/ethernet_5664dc040c2b_cable

service-get /net/connman/service/ethernet_5664dc040c2b_cable State
service-get /net/connman/service/ethernet_5664dc040c2b_cable State

service-get /net/connman/service/ethernet_5664dc040c2b_cable Name
service-get /net/connman/service/ethernet_5664dc040c2b_cable Nameservers
service-get /net/connman/service/ethernet_5664dc040c2b_cable Method --error
service-get /net/connman/service/ethernet_5664dc040c2b_cable IPv6
service-get /net/connman/service/ethernet_5664dc040c2b_cable Proxy
service-get /net/connman/service/ethernet_5664dc040c2b_cable AutoConnect
service-get /net/connman/service/ethernet_5664dc040c2b_cable Ethernet
service-get /net/connman/service/ethernet_5664dc040c2b_cable Domains


service-set /net/connman/service/ethernet_0e4aa18747c9_cable IPv4 Address '192.168.30.12'
service-set /net/connman/service/ethernet_b6d5c53dba10_cable AutoConnect 1
service-set /net/connman/service/ethernet_0e4aa18747c9_cable Name Wired1

service-set /net/connman/service/ethernet_4a52e60e827b_cable State online


dbus.Dictionary({

dbus.String(u'Netmask'): dbus.String(u'255.255.255.0', variant_level=1),
dbus.String(u'Gateway'): dbus.String(u'192.168.30.1', variant_level=1),
dbus.String(u'Method'): dbus.String(u'dhcp', variant_level=1),
dbus.String(u'Address'): dbus.String(u'192.168.30.190', variant_level=1)},

signature=dbus.Signature('sv'), variant_level=1)





dbus.Dictionary({
dbus.String(u'IPv6.Configuration'):
    dbus.Dictionary({dbus.String(u'Method'): dbus.String(u'auto', variant_level=1), dbus.String(u'Privacy'): dbus.String(u'disabled', variant_level=1)}, signature=dbus.Signature('sv'), variant_level=1),
    dbus.String(u'AutoConnect'): dbus.Boolean(False, variant_level=1),
    dbus.String(u'Name'): dbus.String(u'Wired', variant_level=1),
    dbus.String(u'Nameservers'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1),
    dbus.String(u'Provider'): dbus.Dictionary({}, signature=dbus.Signature('sv'), variant_level=1),
    dbus.String(u'Favorite'): dbus.Boolean(True, variant_level=1),
    dbus.String(u'Domains.Configuration'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1),
    dbus.String(u'Timeservers.Configuration'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1),
    dbus.String(u'State'): dbus.String(u'idle', variant_level=1),
    dbus.String(u'Proxy'): dbus.Dictionary({}, signature=dbus.Signature('sv'), variant_level=1),
    dbus.String(u'Nameservers.Configuration'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1),
    dbus.String(u'IPv4'): dbus.Dictionary({}, signature=dbus.Signature('sv'), variant_level=1),
    dbus.String(u'Timeservers'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1),
    dbus.String(u'IPv6'): dbus.Dictionary({}, signature=dbus.Signature('sv'), variant_level=1),
    dbus.String(u'Domains'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1),
    dbus.String(u'Ethernet'): dbus.Dictionary({dbus.String(u'Interface'): dbus.String(u'eth1', variant_level=1),
    dbus.String(u'MTU'): dbus.UInt16(1500, variant_level=1),
    dbus.String(u'Method'): dbus.String(u'auto', variant_level=1),
    dbus.String(u'Address'): dbus.String(u'56:64:DC:04:0C:2B', variant_level=1)},
    signature=dbus.Signature('sv'), variant_level=1), dbus.String(u'Security'): dbus.Array([], signature=dbus.Signature('s'), variant_level=1),
    dbus.String(u'Proxy.Configuration'): dbus.Dictionary({}, signature=dbus.Signature('sv'), variant_level=1),
    dbus.String(u'Type'): dbus.String(u'ethernet', variant_level=1), dbus.String(u'Immutable'): dbus.Boolean(False, variant_level=1),
    dbus.String(u'IPv4.Configuration'): dbus.Dictionary({dbus.String(u'Method'): dbus.String(u'dhcp', variant_level=1)},
    signature=dbus.Signature('sv'), variant_level=1)},
    signature=dbus.Signature('sv'))


    CONN> service-get /net/connman/service/ethernet_5664dc040c2b_cable IPv4
=========================================================

dbus.Dictionary({

dbus.String(u'Netmask'): dbus.String(u'255.255.255.0', variant_level=1),
dbus.String(u'Gateway'): dbus.String(u'192.168.1.1', variant_level=1),
dbus.String(u'Method'): dbus.String(u'manual', variant_level=1),
dbus.String(u'Address'): dbus.String(u'192.168.1.107', variant_level=1)},
signature=dbus.Signature('sv'), variant_level=1)


  config = {'Method': make_string('manual'),
                      'Address': make_string('192.168.1.108'),
                      'Netmask': make_string('255.255.255.1')}